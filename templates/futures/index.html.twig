{% extends 'base.html.twig' %}

{% block title %}BSX - Futures{% endblock %}

{% block body %}

<div class="futures_wrapper">

    {% if buckets == "NO BUCKETS" %}

    {{ form(form) }}

    {% else %}

    {% set play_max = play_bucket_limit %}
    {% set profit_max = profit_bucket_limit %}
    {% set play = buckets.play %}
    {% set profit = buckets.profit %}
    {% set saved = buckets.withdrawn %}
    {% set used = buckets.used %}
    {% set debt = buckets.debt %}
    {% set savings_debt = buckets.savingsDebt %}
    {% set broker = play + profit %}
        
    <h2>Data Output</h2>
    <p>
        Broker Account: ${{ broker|number_format(2) }}<br />
        Play: ${{ play|number_format(2) }}<br />
        Profit: ${{ profit|number_format(2) }}<br />
        Withdrawn: ${{ saved|number_format(2) }}<br />
        Used: ${{ used|number_format(2) }}<br />
        {# Debt: -${{ debt|number_format(2) }}(CDN)<br /> #}
        Savings Debt: ${{ savings_debt|number_format(2) }}(CDN)<br />
    </p>

    <h2>Buckets</h2>
    <div class="bucket">
        <div class="statsgraph hotcold">
            <div class="center_percent">
                <div class="amount" id="f1_percent"></div>
                <div class="text">Play Bucket</div>
                <div class="warning" id="f1_small">$1000</div>
            </div>
            <div class="hcChartWrapper">
                <canvas id="f1Chart" width="230" height="230"></canvas>
            </div>
        </div>
    </div>

    <div class="bucket">
        <div class="statsgraph hotcold">
            <div class="center_percent">
                <div class="amount" id="f2_percent"></div>
                <div class="text">Profit Bucket</div>
                <div class="warning" id="f2_small"></div>
            </div>
            <div class="hcChartWrapper">
                <canvas id="f2Chart" width="230" height="230"></canvas>
            </div>
        </div>
    </div>

    <div class="bucket">
        <div class="statsgraph hotcold">
            <div class="center_percent">
                <div class="amount" id="f3_percent"></div>
                <div class="text">Yearly Withdrawl Saved</div>
                <div class="warning" id="f3_small"></div>
            </div>
            <div class="hcChartWrapper">
                <canvas id="f3Chart" width="230" height="230"></canvas>
            </div>
        </div>
    </div>
    {% endif %}

    {% if buckets != "NO BUCKETS" %}
    <h2>Actions</h2>
    <button id="empty_bucket_btn">Empty Monthly Bucket</button>
    {% endif %}

    <h2>Daily Plays</h2>
    <table>
        <tr>
            <th>Date</th>
            <th>Trades</th>
            <th>P/L</th>
            <th>Fees</th>
            {# <th>Total</th> #}
            <th>|</th>
            <th>Play Bucket</th>
            <th>Profit Bucket</th>
        </tr>

        {% for day in plays %}
        <tr>
            <td>{{ day.date|date("m/d/Y") }}</td>
            <td>{{ day.trades }}</td>
            <td>${{ day.amount|number_format(2) }}</td>
            <td>${{ day.fees|number_format(2) }}</td>
            {# <td>${{ day.total|number_format(2) }}</td> #}
            <td>|</td>
            <td>${{ day.play|number_format(2) }}</td>
            <td>${{ day.profit|number_format(2) }}</td>
        </tr>
        {% endfor %}
    </table>

    
    <h2>Current Week</h2>
    {% if current_week %}
    {% set week_total = current_week.play + current_week.profit %}
    {% set week_goal_percent = (week_total/weekly_goal) * 100 %}
    <h3>${{ week_total|number_format(2) }}/{{ weekly_goal|number_format(2) }} - {{ week_goal_percent }}%</h3>
    <progress value="{{ week_total }}" max="{{ weekly_goal }}" style="width: 407px;"></progress>
    <table>
        <tr>
            <th>Week Start</th>
            <th>Week End</th>
            <th>Trades</th>
            <th>P/L</th>
            <th>Fees</th>
            <th>Play</th>
            <th>Profit</th>
            <th></th>
        </tr>

        <tr>
            <td>{{ current_week.start|date("m/d/Y") }}</td>
            <td>{{ current_week.end|date("m/d/Y") }}</td>
            <td>{{ current_week.trades }}</td>
            <td>${{ current_week.pl|number_format(2) }}</td>
            <td>${{ current_week.fees|number_format(2) }}</td>
            <td>${{ current_week.play|number_format(2) }}</td>
            <td>${{ current_week.profit|number_format(2) }}</td>
        </tr>
    </table>
    {% endif %}

    <h2>Previous Weeks</h2>
    <table>
        <tr>
            <th>Week Start</th>
            <th>Week End</th>
            <th>Trades</th>
            <th>P/L</th>
            <th>Fees</th>
            <th>Play</th>
            <th>Profit</th>
            <th></th>
        </tr>
        {% for week in prev_weeks %}
        <tr>
            <td>{{ week.start|date("m/d/Y") }}</td>
            <td>{{ week.end|date("m/d/Y") }}</td>
            <td>{{ week.trades }}</td>
            <td>${{ week.pl|number_format(2) }}</td>
            <td>${{ week.fees|number_format(2) }}</td>
            <td>${{ week.play|number_format(2) }}</td>
            <td>${{ week.profit|number_format(2) }}</td>
        </tr>
        {% endfor %}
    </table>



    <div class="modal_bg" style="display:none;"></div>
    <div class="modal" style="display:none;">
        <div class="inside">
            <h2>Empty Profit Bucket</h2>
            <h4>How much CDN money did you get for converting the profit bucket?</h4>
            <p>Warning! The withdrawl fee will removed auto-magic-ly! Just input the amount you submitted in the withdrawl request.</p>
            <input type="text" id="cdn_amount" placeholder="$0">
            <button type="button" class="cdn_btn" id="cdn_submit">Empty Bucket and Bank That Cash!</button>
            <button class="close_x">X</button>
        </div>
    </div>
</div>

<script>

$(".close_x").on('click', function(){
    $(".modal_bg, .modal").hide();
});

$("#empty_bucket_btn").on('click', function(){
    $(".modal_bg, .modal").show();
});

$("#cdn_submit").on("click", function(){
    
    var cdn = $("#cdn_amount").val();
    $.post("/futures/emptyprofitbucket/" + cdn, {}, function(json){
        alert("Empty Complete");
        // result complete... refresh page here..

    });
});

{% if buckets != "NO BUCKETS" %}
const play_limit = {{ play_max }};
const play_amount = {% if use_broker_margin %}{{ play - broker_margin_amount }}{% else %}{{ play }}{% endif %};
//const play_amount = {{ play }};
const profit = {{ profit }};
const profit_limit = {{ profit_max }};
const withdrawl = {{ saved }};
const withdrawl_used = {{ used }};
const play_percent = Math.floor((play_amount/play_limit) * 100);
const profit_percent = Math.floor((profit/profit_limit) * 100)
const withdrawn_used_percent = 100 - Math.floor((withdrawl_used/withdrawl) * 100);

document.getElementById("f1_percent").innerHTML = play_percent + "%";
document.getElementById("f2_percent").innerHTML = profit_percent + "%";
document.getElementById("f3_percent").innerHTML = withdrawn_used_percent + "%";
document.getElementById("f1_small").innerHTML = "$" + play_amount + "/$" + play_limit;
document.getElementById("f2_small").innerHTML = "$" + profit + "/$" + profit_limit;
document.getElementById("f3_small").innerHTML = "$" + withdrawl + "<br />$" + withdrawl_used + " Used";

const play_colors = ['#209e3b', '#deeb2a', '#c9101c'];
const play_color = play_colors[(play_amount / play_limit > 0.75) ? 0 : (play_amount / play_limit > 0.50) ? 1 : 2];

const f1_ctx = document.getElementById('f1Chart').getContext('2d');
const f2_ctx = document.getElementById('f2Chart').getContext('2d');
const f3_ctx = document.getElementById('f3Chart').getContext('2d');

const f1_chart = new Chart(f1_ctx, {
  type: 'doughnut',
  data: {
    labels: [
        'Free Space',
        'Play Amount',        
    ],
    datasets: [{
        label: 'Play Account Bucket',
        data: [play_limit - play_amount, play_amount],
        backgroundColor: [
            '#DBE2F4',
            play_color, 
        ],
        hoverOffset: 0,
        borderWidth: 0,
        borderJoinStyle: 'bevel',
        borderRadius: [0, 20], // how round thge edges of the sections are
        cutout:104, // thinkness of the ring..
        spacing: -30,
    }]
  },
  options: {
    maintainAspectRatio: false,
    plugins:{
        legend: {
            display: false //This will do the task
        },
    },


  }
});


  const f2_chart = new Chart(f2_ctx, {
  type: 'doughnut',
  data: {
    labels: [
        'Free Space',
        'Profit',        
    ],
    datasets: [{
        label: 'Profit Bucket',
        data: [profit_limit - profit, profit],
        backgroundColor: [
            '#DBE2F4',
            '#209e3b', 
        ],
        hoverOffset: 0,
        borderWidth: 0,
        borderJoinStyle: 'bevel',
        borderRadius: [0, 20], // how round thge edges of the sections are
        cutout:104, // thinkness of the ring..
        spacing: -30,
    }]
  },
  options: {
    maintainAspectRatio: false,
    plugins:{
        legend: {
            display: false //This will do the task
        },
    },


  }
  });


  const f3_chart = new Chart(f3_ctx, {
  type: 'doughnut',
  data: {
    labels: [
        'Used Withdrawl Amount',   
        'Saved Money',
    ],

    datasets: [{
        label: 'Withdrawn/Saved Profit',
        data: [withdrawl_used, withdrawl - withdrawl_used],
        backgroundColor: [
            '#DBE2F4',
            '#209e3b', 
        ],
        hoverOffset: 0,
        borderWidth: 0,
        borderJoinStyle: 'bevel',
        borderRadius: [20, 0], // how round the edges of the sections are
        cutout:104, // thinkness of the ring..
        spacing: -30,
    }]
  },
  options: {
    maintainAspectRatio: false,
    plugins:{
        legend: {
            display: false //This will do the task
        },
    },


  }
});
{% endif %}

$("#create_buckets").on("click", function(){
    var play = parseFloat($("#new_buckets_start_play").val());
    var profit = parseFloat($("#new_buckets_start_profit").val());
    var withdrawn = parseFloat($("#new_buckets_start_withdrawn").val());
    var used = parseFloat($("#new_buckets_start_used").val());

    if(isNaN(play)){console.error("play value is: NaN"); return;}
    if(isNaN(profit)){console.error("profit value is: NaN"); return;}
    if(isNaN(withdrawn)){console.error("withdrawn value is: NaN"); return;}
    if(isNaN(used)){console.error("used value is: NaN"); return;}

    $.post("/futures/createbuckets", {'play':play,'profit':profit,'widthdrawn':withdrawn,'used':used});
});

</script>
{% endblock %}
