<div class="panel large_panel total_value">
    {% set total_value_usd = 0.00 %}
    {% set total_value_can = 0.00 %}

    {% for stock in stocks %}
        {% set stock_total = 0 %}
        {% set stock_amount = 0 %}
        {% set cc_over_strike_total_can = 0 %}
        {% set cc_over_strike_total_usd = 0 %}
        {% set buys = 0 %}

        {% for buy in stock.shareBuys %}
            {% if buy.sold < buy.amount %}
                {% if buy.nofee == false %}{% endif %}
                {% set remaining = buy.amount - buy.sold %}
                {% set stock_amount = stock_amount + remaining %}
            {% endif %}
        {% endfor %}

        {% for cc in stock.coveredCalls %}
            {% if cc.expired == 0 and cc.exercised == 0 and cc.strike <= stock.currentPrice  %}
                {% set stock_amount = stock_amount - (100 * cc.contracts) %}
                {% if stock.country == "CAN" %}
                    {% set cc_over_strike_total_can = cc_over_strike_total_can + ((cc.strike * cc.contracts * 100) - 43.00) %}
                {% else %}
                    {% set cc_over_strike_total_usd = cc_over_strike_total_usd + ((cc.strike * cc.contracts * 100) - 43.00) %}
                {% endif %}
            {% endif %}
        {% endfor %}

        {% if stock_amount > 0 or cc_over_strike_total_can > 0 or cc_over_strike_total_usd > 0 %}
            {% if stock.noFee == false %}
                {% set fee = (buys * 9.95) %}
            {% else %}
                {% set fee = 0 %}
            {% endif %}

            {% set stock_total = (stock_amount * stock.currentPrice) + fee %}

            {% if stock.country == "CAN" %}
                {% set total_value_can = total_value_can + stock_total + cc_over_strike_total_can %}
            {% else %}
                {% set total_value_usd = total_value_usd + stock_total + cc_over_strike_total_usd %}
            {% endif %}

{#            {{ stock.name }}: {{ stock_total }} | {{ stock_amount }} | {{ stock.currentPrice }} | {{ cc_over_strike_total_usd }} | {{ total_value_can + total_value_usd }}<br />#}
        {% endif %}

        {% for option in stock.options %}
            {% if option.expired == false and option.contracts >= 1 %}
                {% set option_buy_fee = (option.buys * 9.95) + (option.contracts * 1.25) %}
                {% set option_sell_fee = 9.95 + (option.contracts * 1.25) %}
                {% set option_current = (option.current * 100 * option.contracts) - option_sell_fee %}
                {% if stock.country == "CAN" %}
                    {% set total_value_can = total_value_can + option_current %}
                {% else %}
                    {% set total_value_usd = total_value_usd + option_current %}
                {% endif %}
            {% endif %}
        {% endfor %}

    {% endfor %}



    <h2 class="text-2xl">Total Portfolio Value</h2>
    US: ${{ total_value_usd|number_format(2) }} | ${{ (total_value_usd * 1.36)|number_format(2) }} (can)<br />
    Can: ${{ total_value_can|number_format(2) }}<br />
    {% set overall_total = ((total_value_usd * 1.36) + total_value_can) %}
    <h2 class="text-center text-6xl">${{ overall_total|number_format(2) }}</h2>
</div>

<div class="panel large_panel">
    <canvas id="total_chart"></canvas>
    <script>
        let total_data_values = [
            {{ totalValues.value1 }},
            {{ totalValues.value2 }},
            {{ totalValues.value3 }},
            {{ totalValues.value4 }},
            {{ totalValues.value5 }},
            {{ totalValues.value6 }},
            {{ totalValues.value7 }},
            {{ totalValues.value8 }},
            {{ totalValues.value9 }},
            {{ totalValues.value10 }},
            {{ totalValues.value11 }},
            {{ totalValues.value12 }},
            {{ totalValues.value13 }},
            {{ totalValues.value14 }},
            {{ totalValues.value15 }},
            {{ totalValues.value16 }},
            {{ totalValues.value17 }},
            {{ totalValues.value18 }},
            {{ totalValues.value19 }},
            {{ totalValues.value20 }}
        ];

        total_data_values[{{ totalValues.fill }} - 1] = {{ overall_total }}



        const data_total = {
            labels: [
                "{{ totalValues.valueDate1|date("D d/m")  }}",
                "{{ totalValues.valueDate2|date("D d/m")  }}",
                "{{ totalValues.valueDate3|date("D d/m")  }}",
                "{{ totalValues.valueDate4|date("D d/m")  }}",
                "{{ totalValues.valueDate5|date("D d/m")  }}",
                "{{ totalValues.valueDate6|date("D d/m")  }}",
                "{{ totalValues.valueDate7|date("D d/m")  }}",
                "{{ totalValues.valueDate8|date("D d/m")  }}",
                "{{ totalValues.valueDate9|date("D d/m")  }}",
                "{{ totalValues.valueDate10|date("D d/m")  }}",
                "{{ totalValues.valueDate11|date("D d/m")  }}",
                "{{ totalValues.valueDate12|date("D d/m")  }}",
                "{{ totalValues.valueDate13|date("D d/m")  }}",
                "{{ totalValues.valueDate14|date("D d/m")  }}",
                "{{ totalValues.valueDate15|date("D d/m")  }}",
                "{{ totalValues.valueDate16|date("D d/m")  }}",
                "{{ totalValues.valueDate17|date("D d/m")  }}",
                "{{ totalValues.valueDate18|date("D d/m")  }}",
                "{{ totalValues.valueDate19|date("D d/m")  }}",
                "{{ totalValues.valueDate20|date("D d/m")  }}",

            ],
            datasets: [{
                label: 'Total Value over 20 days..',
                data: total_data_values,
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(255, 159, 64, 0.2)',
                    'rgba(255, 205, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(255, 159, 64, 0.2)',
                    'rgba(255, 205, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(255, 159, 64, 0.2)',
                    'rgba(255, 205, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(255, 159, 64, 0.2)',
                    'rgba(255, 205, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                ],
                borderColor: [
                    'rgb(255, 99, 132)',
                    'rgb(255, 159, 64)',
                    'rgb(255, 205, 86)',
                    'rgb(75, 192, 192)',
                    'rgb(54, 162, 235)',
                    'rgb(255, 99, 132)',
                    'rgb(255, 159, 64)',
                    'rgb(255, 205, 86)',
                    'rgb(75, 192, 192)',
                    'rgb(54, 162, 235)',
                    'rgb(255, 99, 132)',
                    'rgb(255, 159, 64)',
                    'rgb(255, 205, 86)',
                    'rgb(75, 192, 192)',
                    'rgb(54, 162, 235)',
                    'rgb(255, 99, 132)',
                    'rgb(255, 159, 64)',
                    'rgb(255, 205, 86)',
                    'rgb(75, 192, 192)',
                    'rgb(54, 162, 235)',
                ],
                borderWidth: 1
            }]
        };
        const config_total = {
            type: 'bar',
            data: data_total,
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            },
        };
        const total_ctx = document.getElementById('total_chart');
        let total_chart = new Chart(total_ctx, config_total);

        $.post("/dashboard/settotalvaluecolumn", {total:{{ overall_total }}}, (json) => {
            console.log(json.total);
        });
    </script>
</div>